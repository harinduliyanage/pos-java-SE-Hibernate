/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alpha.view;

import com.alpha.dto.BatchDTO;
import com.alpha.model.Batch;
import com.sun.glass.events.KeyEvent;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.joda.time.LocalDate;

/**
 *
 * @author Harindu.sul
 */
public class AvailableBatchesFrame extends javax.swing.JFrame {

    /**
     * Creates new form Test
     */
    private CashierPanel c;
    private DefaultTableCellRenderer centerRenderer;

    public AvailableBatchesFrame() {
        initComponents();
        this.centerRenderer = new DefaultTableCellRenderer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        availableBatchCashierTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        availableBatchCashierTable.setAutoCreateRowSorter(true);
        availableBatchCashierTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        availableBatchCashierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch ID", "Batch", "EXP Date", "MFDate", "Qty On Hand", "Unit Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        availableBatchCashierTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        availableBatchCashierTable.setGridColor(new java.awt.Color(255, 255, 255));
        availableBatchCashierTable.setRowHeight(28);
        availableBatchCashierTable.setSelectionBackground(new java.awt.Color(153, 153, 153));
        availableBatchCashierTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                availableBatchCashierTableKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(availableBatchCashierTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Available More Than One Batch");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jLabel1)
                .addContainerGap(284, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void availableBatchCashierTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_availableBatchCashierTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int row = availableBatchCashierTable.getSelectedRow();
            if (row != -1) {
                Object batchIdValue = availableBatchCashierTable.getValueAt(row, 0);
                Object batchValue = availableBatchCashierTable.getValueAt(row, 1);
                Object expValue = availableBatchCashierTable.getValueAt(row, 2);
                Object mfdValue = availableBatchCashierTable.getValueAt(row, 3);
                Object qtyOnHandValue = availableBatchCashierTable.getValueAt(row, 4);
                Object unitPriceValue = availableBatchCashierTable.getValueAt(row, 5);
                String batchId = batchIdValue.toString();
                String batch = batchValue.toString();
                String exp = expValue.toString();
                String mfd = mfdValue.toString();
                String qty = qtyOnHandValue.toString();
                String unitPrice = unitPriceValue.toString();
                LocalDate MFD = new LocalDate(mfd);
                LocalDate EXP = new LocalDate(exp);
                BatchDTO b = new BatchDTO();
                b.setId(Integer.parseInt(batchId));
                b.setBatch(batch);
                b.setEXPD(EXP);
                b.setMFD(MFD);
                b.setQtyOnHand(Double.parseDouble(qty));
                b.setUnitPrice(Double.parseDouble(unitPrice));
                c.setSelectedBatchDetails(b);
                dispose();
            }
        }
    }//GEN-LAST:event_availableBatchCashierTableKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvailableBatchesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvailableBatchesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvailableBatchesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvailableBatchesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AvailableBatchesFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableBatchCashierTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
    public void setCashierPanelObject(CashierPanel cashierPanel, List<Batch> all) {
        c = cashierPanel;
        DefaultTableModel m = (DefaultTableModel) availableBatchCashierTable.getModel();
        int rowCount = m.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            m.removeRow(i);
        }
        for (Batch b : all) {
            if(b.getQtyOnHand()>0){
                m.addRow(new Object[]{b.getId(),
                b.getBatch(),
                b.getEXPD(),
                b.getMFD(),
                b.getQtyOnHand(),
                b.getUnitPrice()});
            }
        }
        availableBatchCashierTable.setModel(m);
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        availableBatchCashierTable.setDefaultRenderer(String.class, centerRenderer);
        availableBatchCashierTable.setSelectionMode(1);
    }
}
