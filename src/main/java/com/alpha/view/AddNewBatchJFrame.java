/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alpha.view;

import com.alpha.config.Context;
import com.alpha.dto.BatchDTO;
import com.alpha.dto.ItemDTO;
import com.alpha.model.Batch;
import com.alpha.model.Item;
import com.alpha.service.custom.BatchService;
import com.alpha.service.custom.ItemService;
import com.alpha.utils.Validation;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.joda.time.LocalDate;
import org.springframework.context.support.AbstractApplicationContext;

/**
 *
 * @author Harindu.sul
 */
public class AddNewBatchJFrame extends javax.swing.JFrame {

    private AbstractApplicationContext context;
    private DefaultListModel listModelForBatch;
    private DefaultListModel listModelForBatchObjects;
    
    public AddNewBatchJFrame() {
        initComponents();
        this.context=Context.getInstance();
        listModelForBatch=new DefaultListModel();
        listModelForBatchObjects=new DefaultListModel();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BatchViewPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        searchByBarcodeTxtForBatch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        avalableBatchList = new javax.swing.JList<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jlabeljhjha = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel34 = new javax.swing.JLabel();
        searchByDescriptionForBatchCombo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        onBatchItemIdTxt = new javax.swing.JTextField();
        onBatchBarcodeTxt = new javax.swing.JTextField();
        onbatchDescriptionTxt = new javax.swing.JTextField();
        onBatchPackSizeTxt = new javax.swing.JTextField();
        onBatchReOrderLevelTxt = new javax.swing.JTextField();
        onBatchBatchIdtxt = new javax.swing.JTextField();
        onBatchBatchItemIdtxt = new javax.swing.JTextField();
        onBatchBatchtxt = new javax.swing.JTextField();
        onBatchBatchEXPtxt = new javax.swing.JTextField();
        onBatchBatchQtyOnHandtxt = new javax.swing.JTextField();
        onBatchBatchUnitPricetxt = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        onBatchBatchMFDtxt = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        newBatchTxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        newBatchMFDtxt = new javax.swing.JFormattedTextField();
        newBatchEXPDatetxt = new javax.swing.JFormattedTextField();
        newBatchAddQtyTxt = new javax.swing.JFormattedTextField();
        newBatchUnitPriceTxt = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BatchViewPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Search The Item First...");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Search By Barcode");

        searchByBarcodeTxtForBatch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchByBarcodeTxtForBatchKeyPressed(evt);
            }
        });

        avalableBatchList.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        avalableBatchList.setSelectionBackground(new java.awt.Color(204, 204, 204));
        avalableBatchList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                avalableBatchListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(avalableBatchList);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("Available Batches");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Details Of Seleted Batch");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(51, 51, 51));
        jLabel28.setText("Batch ID");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(51, 51, 51));
        jLabel29.setText("Item ID");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(51, 51, 51));
        jLabel30.setText("Batch");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 51, 51));
        jLabel31.setText("EXP Date");

        jlabeljhjha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlabeljhjha.setForeground(new java.awt.Color(51, 51, 51));
        jlabeljhjha.setText("Qty On Hand");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 51, 51));
        jLabel33.setText("Unit Price");

        jSeparator3.setForeground(new java.awt.Color(51, 51, 51));

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(51, 51, 51));
        jLabel34.setText("Search By Description");

        searchByDescriptionForBatchCombo.setEditable(true);
        searchByDescriptionForBatchCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchByDescriptionForBatchComboItemStateChanged(evt);
            }
        });
        searchByDescriptionForBatchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByDescriptionForBatchComboActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setText("Item ID");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(51, 51, 51));
        jLabel35.setText("Description");

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(51, 51, 51));
        jLabel36.setText("Barcode");

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(51, 51, 51));
        jLabel37.setText("Pack Size");

        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(51, 51, 51));
        jLabel38.setText("Re-Order Level");

        onBatchItemIdTxt.setEditable(false);

        onBatchBarcodeTxt.setEditable(false);

        onbatchDescriptionTxt.setEditable(false);

        onBatchPackSizeTxt.setEditable(false);

        onBatchReOrderLevelTxt.setEditable(false);

        onBatchBatchIdtxt.setEditable(false);

        onBatchBatchItemIdtxt.setEditable(false);

        onBatchBatchtxt.setEditable(false);

        onBatchBatchEXPtxt.setEditable(false);

        onBatchBatchQtyOnHandtxt.setEditable(false);

        onBatchBatchUnitPricetxt.setEditable(false);

        jSeparator4.setForeground(new java.awt.Color(51, 51, 51));

        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(51, 51, 51));
        jLabel39.setText("2nd Step Add New Batch For searched  Item");

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(51, 51, 51));
        jLabel40.setText("New Batch");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(51, 51, 51));
        jLabel41.setText("EXP Date");

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(51, 51, 51));
        jLabel42.setText("MFD");

        onBatchBatchMFDtxt.setEditable(false);

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(51, 51, 51));
        jLabel43.setText("MFD");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(51, 51, 51));
        jLabel44.setText("Add Qty");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(51, 51, 51));
        jLabel45.setText("Unit Price");

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Add New Batch");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        newBatchMFDtxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        newBatchEXPDatetxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        newBatchAddQtyTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));

        newBatchUnitPriceTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0.00"))));

        javax.swing.GroupLayout BatchViewPanelLayout = new javax.swing.GroupLayout(BatchViewPanel);
        BatchViewPanel.setLayout(BatchViewPanelLayout);
        BatchViewPanelLayout.setHorizontalGroup(
            BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator3)
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel34)
                                            .addComponent(jLabel24))
                                        .addGap(18, 18, 18)
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(searchByBarcodeTxtForBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(searchByDescriptionForBatchCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(onBatchItemIdTxt))
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(onbatchDescriptionTxt))
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(onBatchBarcodeTxt))
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(onBatchPackSizeTxt))
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(onBatchReOrderLevelTxt)))
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addGap(54, 54, 54)
                                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BatchViewPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(67, 67, 67)))
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jlabeljhjha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(onBatchBatchIdtxt)
                                            .addComponent(onBatchBatchItemIdtxt)
                                            .addComponent(onBatchBatchtxt)
                                            .addComponent(onBatchBatchEXPtxt)
                                            .addComponent(onBatchBatchQtyOnHandtxt)
                                            .addComponent(onBatchBatchUnitPricetxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(onBatchBatchMFDtxt)))
                                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                            .addComponent(jSeparator4))
                        .addGap(44, 44, 44))
                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel44)
                                            .addComponent(jLabel45))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(newBatchMFDtxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                            .addComponent(newBatchEXPDatetxt, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(newBatchTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(newBatchAddQtyTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(newBatchUnitPriceTxt))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        BatchViewPanelLayout.setVerticalGroup(
            BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchByBarcodeTxtForBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BatchViewPanelLayout.createSequentialGroup()
                        .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchByDescriptionForBatchCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchItemIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBarcodeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onbatchDescriptionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchPackSizeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchReOrderLevelTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(BatchViewPanelLayout.createSequentialGroup()
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchIdtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchItemIdtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchEXPtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchMFDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlabeljhjha, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchQtyOnHandtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(12, 12, 12)
                                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(onBatchBatchUnitPricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBatchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBatchEXPDatetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newBatchMFDtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(newBatchAddQtyTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(BatchViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(newBatchUnitPriceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BatchViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BatchViewPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchByBarcodeTxtForBatchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchByBarcodeTxtForBatchKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String barcode = searchByBarcodeTxtForBatch.getText();
            if (!Validation.validateEmptyTextFeald(barcode)) {
                ItemService itemService = (ItemService) context.getBean("ItemService");
                try {
                    Item itemByBarcode = itemService.getItemByBarcode(barcode);
                    if (itemByBarcode == null) {
                        onBatchItemIdTxt.setText("");
                        onBatchBarcodeTxt.setText("");
                        onBatchPackSizeTxt.setText("");
                        onBatchReOrderLevelTxt.setText("");
                        onbatchDescriptionTxt.setText("");
                        listModelForBatch.removeAllElements();
                        listModelForBatchObjects.removeAllElements();
                        avalableBatchList.setModel(listModelForBatch);
                        onBatchBatchIdtxt.setText("");
                        onBatchBatchMFDtxt.setText("");
                        onBatchBatchEXPtxt.setText("");
                        onBatchBatchQtyOnHandtxt.setText("");
                        onBatchBatchItemIdtxt.setText("");
                        onBatchBatchUnitPricetxt.setText("");
                        onBatchBatchtxt.setText("");
                        JOptionPane.showMessageDialog(this, "Can not Find Item... unregistered Barcode Value!");
                    } else {
                        List<Batch> allBatches = itemService.getItemsBatchesById(itemByBarcode.getId());
                        listModelForBatch.removeAllElements();
                        listModelForBatchObjects.removeAllElements();
                        for (Batch b : allBatches) {
                            listModelForBatch.addElement(b.getBatch());
                            listModelForBatchObjects.addElement(b);
                        }
                        avalableBatchList.setModel(listModelForBatch);
                        onBatchItemIdTxt.setText(itemByBarcode.getId() + "");
                        onBatchBarcodeTxt.setText(itemByBarcode.getBarcode());
                        onBatchPackSizeTxt.setText(itemByBarcode.getPackSize());
                        onBatchReOrderLevelTxt.setText(itemByBarcode.getReOrderLevel() + "");
                        onbatchDescriptionTxt.setText(itemByBarcode.getDescription());
                        searchByDescriptionForBatchCombo.requestFocus();
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            }
        }
    }//GEN-LAST:event_searchByBarcodeTxtForBatchKeyPressed

    private void avalableBatchListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_avalableBatchListValueChanged
        if (avalableBatchList.getSelectedIndex() == -1) {
        } else {
            Batch selectedBatch = (Batch) listModelForBatchObjects.get(avalableBatchList.getSelectedIndex());
            onBatchBatchIdtxt.setText(selectedBatch.getId() + "");
            onBatchBatchMFDtxt.setText(selectedBatch.getMFD() + "");
            onBatchBatchEXPtxt.setText(selectedBatch.getEXPD() + "");
            onBatchBatchQtyOnHandtxt.setText(selectedBatch.getQtyOnHand() + "");
            onBatchBatchItemIdtxt.setText(onBatchItemIdTxt.getText());
            onBatchBatchUnitPricetxt.setText(selectedBatch.getUnitPrice() + "");
            onBatchBatchtxt.setText(selectedBatch.getBatch());
        }
    }//GEN-LAST:event_avalableBatchListValueChanged

    private void searchByDescriptionForBatchComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchByDescriptionForBatchComboItemStateChanged
        int index = searchByDescriptionForBatchCombo.getSelectedIndex();
        if (index != 0 && index != -1) {
            String description = searchByDescriptionForBatchCombo.getSelectedItem().toString();

            ItemService itemService = (ItemService) context.getBean("ItemService");
            try {
                Item itemByBarcode = itemService.getItemByDescription(description);
                if (itemByBarcode == null) {
                    onBatchItemIdTxt.setText("");
                    onBatchBarcodeTxt.setText("");
                    onBatchPackSizeTxt.setText("");
                    onBatchReOrderLevelTxt.setText("");
                    onbatchDescriptionTxt.setText("");
                    listModelForBatch.removeAllElements();
                    listModelForBatchObjects.removeAllElements();
                    avalableBatchList.setModel(listModelForBatch);
                    onBatchBatchIdtxt.setText("");
                    onBatchBatchMFDtxt.setText("");
                    onBatchBatchEXPtxt.setText("");
                    onBatchBatchQtyOnHandtxt.setText("");
                    onBatchBatchItemIdtxt.setText("");
                    onBatchBatchUnitPricetxt.setText("");
                    onBatchBatchtxt.setText("");
                    JOptionPane.showMessageDialog(this, "Can not Find Item... unregistered Barcode Value!");
                } else {
                    List<Batch> allBatches = itemService.getItemsBatchesById(itemByBarcode.getId());
                    listModelForBatch.removeAllElements();
                    listModelForBatchObjects.removeAllElements();
                    for (Batch b : allBatches) {
                        listModelForBatch.addElement(b.getBatch());
                        listModelForBatchObjects.addElement(b);
                    }
                    avalableBatchList.setModel(listModelForBatch);
                    onBatchItemIdTxt.setText(itemByBarcode.getId() + "");
                    onBatchBarcodeTxt.setText(itemByBarcode.getBarcode());
                    onBatchPackSizeTxt.setText(itemByBarcode.getPackSize());
                    onBatchReOrderLevelTxt.setText(itemByBarcode.getReOrderLevel() + "");
                    onbatchDescriptionTxt.setText(itemByBarcode.getDescription());
                    searchByDescriptionForBatchCombo.requestFocus();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }

        }
    }//GEN-LAST:event_searchByDescriptionForBatchComboItemStateChanged

    private void searchByDescriptionForBatchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByDescriptionForBatchComboActionPerformed
        String s = (String) searchByDescriptionForBatchCombo.getSelectedItem();
        boolean v1 = Validation.validateEmptyTextFeald(s);
        if (!v1) {
            searchByDescriptionForBatchCombo.removeAllItems();
            ItemService itemService = (ItemService) context.getBean("ItemService");
            try {
                List<Item> list = itemService.getItemsByDescriptionLike(s);
                if (list != null) {
                    searchByDescriptionForBatchCombo.addItem(s);
                    for (Item item : list) {
                        searchByDescriptionForBatchCombo.addItem(item.getDescription());
                    }
                    searchByDescriptionForBatchCombo.firePopupMenuWillBecomeVisible();
                } else {
                    JOptionPane.showMessageDialog(this, "No Match Found.!");
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Input Data For Searching!");
        }

    }//GEN-LAST:event_searchByDescriptionForBatchComboActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String batchName = newBatchTxt.getText();
        String expDate = newBatchEXPDatetxt.getText();
        String mfDate = newBatchMFDtxt.getText();
        String qty = newBatchAddQtyTxt.getText();
        String unitPrice = newBatchUnitPriceTxt.getText();
        boolean v1 = Validation.validateEmptyTextFeald(batchName);
        boolean v2 = Validation.validateEmptyTextFeald(expDate);
        boolean v3 = Validation.validateEmptyTextFeald(mfDate);
        boolean v4 = Validation.validateEmptyTextFeald(qty);
        boolean v5 = Validation.validateEmptyTextFeald(unitPrice);
        if (!v1 && !v2 && !v3 && !v4 && !v5) {
            String itemId = onBatchItemIdTxt.getText();
            boolean v6 = Validation.validateEmptyTextFeald(itemId);
            if (!v6) {
                BatchService batchService = (BatchService) context.getBean("BatchService");
                ItemService itemService = (ItemService) context.getBean("ItemService");
                try {
                    //batch for MFD and EXP
                    LocalDate MFD = new LocalDate(mfDate);
                    LocalDate EXP = new LocalDate(expDate);

                    Batch batch = new Batch();
                    batch.setBatch(batchName);
                    batch.setEXPD(EXP);
                    batch.setMFD(MFD);
                    batch.setQtyOnHand(Double.parseDouble(qty));
                    batch.setUnitPrice(Double.parseDouble(unitPrice));
                    BatchDTO searched = batchService.getBatchByBatchNameAndItemId(batchName, Integer.parseInt(itemId));
                    if (searched == null) {
                        ItemDTO targetItem = itemService.search(Integer.parseInt(itemId));
                        List<Batch> allBatch = itemService.getItemsBatchesById(Integer.parseInt(itemId));
                        if (allBatch == null) {
                            allBatch = new ArrayList<>();
                        }
                        allBatch.add(batch);
                        targetItem.setBatch(allBatch);
                        boolean update = itemService.update(targetItem);
                        if (update) {
                            newBatchTxt.setText("");
                            newBatchEXPDatetxt.setText("");
                            newBatchMFDtxt.setText("");
                            newBatchAddQtyTxt.setText("");
                            newBatchUnitPriceTxt.setText("");
                            List<Batch> allBatches = itemService.getItemsBatchesById(targetItem.getId());
                            listModelForBatch.removeAllElements();
                            listModelForBatchObjects.removeAllElements();
                            for (Batch b : allBatches) {
                                listModelForBatch.addElement(b.getBatch());
                                listModelForBatchObjects.addElement(b);
                            }
                            JOptionPane.showMessageDialog(this, "New Batch Added Successfully..");
                        } else {
                            JOptionPane.showMessageDialog(this, "New Batch Added Faild..");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "This batch alerady Exits.. cause of can not add this batch again.!");
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please Search Item By Barcode Or Item Description First..");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Input Data");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String batchName = newBatchTxt.getText();
            String expDate = newBatchEXPDatetxt.getText();
            String mfDate = newBatchMFDtxt.getText();
            String qty = newBatchAddQtyTxt.getText();
            String unitPrice = newBatchUnitPriceTxt.getText();
            boolean v1 = Validation.validateEmptyTextFeald(batchName);
            boolean v2 = Validation.validateEmptyTextFeald(expDate);
            boolean v3 = Validation.validateEmptyTextFeald(mfDate);
            boolean v4 = Validation.validateEmptyTextFeald(qty);
            boolean v5 = Validation.validateEmptyTextFeald(unitPrice);
            if (!v1 && !v2 && !v3 && !v4 && !v5) {
                String itemId = onBatchItemIdTxt.getText();
                boolean v6 = Validation.validateEmptyTextFeald(itemId);
                if (!v6) {
                    BatchService batchService = (BatchService) context.getBean("BatchService");
                    ItemService itemService = (ItemService) context.getBean("ItemService");
                    try {
                        //batch for MFD and EXP
                        LocalDate MFD = new LocalDate(mfDate);
                        LocalDate EXP = new LocalDate(expDate);

                        Batch batch = new Batch();
                        batch.setBatch(batchName);
                        batch.setEXPD(EXP);
                        batch.setMFD(MFD);
                        batch.setQtyOnHand(Double.parseDouble(qty));
                        batch.setUnitPrice(Double.parseDouble(unitPrice));
                        BatchDTO searched = batchService.getBatchByBatchNameAndItemId(batchName, Integer.parseInt(itemId));
                        if (searched == null) {
                            ItemDTO targetItem = itemService.search(Integer.parseInt(itemId));
                            List<Batch> allBatch = itemService.getItemsBatchesById(Integer.parseInt(itemId));
                            if (allBatch == null) {
                                allBatch = new ArrayList<>();
                            }
                            allBatch.add(batch);
                            targetItem.setBatch(allBatch);
                            boolean update = itemService.update(targetItem);
                            if (update) {
                                newBatchTxt.setText("");
                                newBatchEXPDatetxt.setText("");
                                newBatchMFDtxt.setText("");
                                newBatchAddQtyTxt.setText("");
                                newBatchUnitPriceTxt.setText("");
                                List<Batch> allBatches = itemService.getItemsBatchesById(targetItem.getId());
                                listModelForBatch.removeAllElements();
                                listModelForBatchObjects.removeAllElements();
                                for (Batch b : allBatches) {
                                    listModelForBatch.addElement(b.getBatch());
                                    listModelForBatchObjects.addElement(b);
                                }
                                JOptionPane.showMessageDialog(this, "New Batch Added Successfully..");
                            } else {
                                JOptionPane.showMessageDialog(this, "New Batch Added Faild..");
                            }

                        } else {
                            JOptionPane.showMessageDialog(this, "This batch alerady Exits.. cause of can not add this batch again.!");
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Please Search Item By Barcode Or Item Description First..");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Please Input Data");
            }
        }
    }//GEN-LAST:event_jButton2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewBatchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewBatchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewBatchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewBatchJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewBatchJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BatchViewPanel;
    private javax.swing.JList<String> avalableBatchList;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel jlabeljhjha;
    private javax.swing.JFormattedTextField newBatchAddQtyTxt;
    private javax.swing.JFormattedTextField newBatchEXPDatetxt;
    private javax.swing.JFormattedTextField newBatchMFDtxt;
    private javax.swing.JTextField newBatchTxt;
    private javax.swing.JFormattedTextField newBatchUnitPriceTxt;
    private javax.swing.JTextField onBatchBarcodeTxt;
    private javax.swing.JTextField onBatchBatchEXPtxt;
    private javax.swing.JTextField onBatchBatchIdtxt;
    private javax.swing.JTextField onBatchBatchItemIdtxt;
    private javax.swing.JTextField onBatchBatchMFDtxt;
    private javax.swing.JTextField onBatchBatchQtyOnHandtxt;
    private javax.swing.JTextField onBatchBatchUnitPricetxt;
    private javax.swing.JTextField onBatchBatchtxt;
    private javax.swing.JTextField onBatchItemIdTxt;
    private javax.swing.JTextField onBatchPackSizeTxt;
    private javax.swing.JTextField onBatchReOrderLevelTxt;
    private javax.swing.JTextField onbatchDescriptionTxt;
    private javax.swing.JTextField searchByBarcodeTxtForBatch;
    private javax.swing.JComboBox<String> searchByDescriptionForBatchCombo;
    // End of variables declaration//GEN-END:variables
}
